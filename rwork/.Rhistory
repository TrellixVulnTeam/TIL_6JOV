welfare <- rename(welfare,
sex = h10_g3,
birth = h10_g4,
marriage = h10_g10,
religion = h10_g11,
income = p1002_8aq1,
code_job = h10_eco9,
code_region = h10_reg7
)
str(welfare)
#상관관계 알아보기
welfare_con<-subset(welfare,select=c('sex','birth','marriage','religion','income','code_job','code_region'))
str(welfare_con)
str(welfare)
cor(welfare$income, welfare_con, use="complete.obs")
#income 결측값 예측
sum(is.na(welfare$income))
#성별 전처리
welfare$sex<-ifelse(welfare$sex==1, 'male','female')
table(welfare$sex)
#월급변수 전처리
table(welfare$income)
summary(welfare$income)
summary(welfare$income)  #결측지 12030
welfare$income<-ifelse(welfare$income %in% c(0,9999), NA, welfare$income)
table(is.na(welfare$income))
#변수 간 관계 알아보기
sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(sex) %>%
summarise(mean_income = mean(income))
sex_income
#시각화
ggplot(data=welfare,aes(x=sex, fill=mean_income))+geom_bar()
table(is.na(welfare$birth))#결측값 없음
#태어난 연도 이용해 나이 변수 생성
welfare$age<-2015 - welfare$birth +1
summary(welfare$age)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
# 2.00   28.00   50.00   48.43   70.00  109.00
summary(welfare$birth)
#나이에 따른 월급 평균 표
age_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(mean_income = mean(income))
tail(age_income)
#시각화
ggplot(data = age_income, aes(x = age, y = mean_income)) + geom_line()
welfare <- welfare %>%
mutate(age_grade = cut(welfare$age, breaks = c(18,30,40,50,60,100), include.lowest = T))
#연령대별 월급 평균
ageg_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age_grade) %>%
summarise(mean_income = mean(income))
ageg_income
#시각화
ggplot(data = ageg_income, aes(x = age_grade, y = mean_income)) + geom_col()
####연령대 및 성별에 따른 월급 평균
sex_income<-welfare %>%
filter(!is.na(income)) %>%
group_by(age_grade,sex) %>%
summarise(mean_income= mean(income))
welfare$sex
sex_income
#시각화
ggplot(data = sex_income, aes(x = age_grade, y = mean_income, fill = sex)) +
geom_col()
####나이에 따라 구분
sex_age <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, sex) %>%
summarise(mean_income = mean(income))
ggplot(data = sex_age, aes(x = age, y = mean_income, col = sex)) + geom_line()
#4)직업별 월급 차이 분석
#직업 코드 알아보기
table(welfare$code_job)
#직업분류코드 참고해 직업명칭 변수를 생성
list_job<-read_excel('Koweps_Codebook.xlsx',sheet=2)
head(list_job)
dim(list_job)
#직업명칭테이블을 left_join으로 welfare직업코드와 합치기
#공통으로 가지고 있는 code_job을 키로 두개의 데이터프레임 합치기
welfare<-left_join(welfare, list_job, id='code_job')
welfare %>%
filter(!is.na(code_job)) %>%
select(code_job, job)
#월급 평균 상위 10개의 자료
str(welfare$job)
job_income<-welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income=mean(income))
head(job_income)
top10_income<- job_income %>%
arrange(desc(mean_income)) %>%
head(10)
top10_income
#시각화
ggplot(data = top10_income, aes(x = reorder(job, mean_income), y = mean_income)) +
geom_col() +
coord_flip()
#월급평균 하위10개의 자료
bottom10_income <- job_income %>%
arrange(mean_income) %>%
head(10)
bottom10_income
ggplot(data = bottom10_income, aes(x = reorder(job, -mean_income), y = mean_income)) +
geom_col() +
ylim(0, 500)
#남성 직업 상위10개
job_male<-welfare %>%
filter(!is.na(job) & sex=='male') %>%
group_by(job) %>%
summarise(n=n()) %>%
arrange(desc(n)) %>%
head(10)
job_male
#시각화
ggplot(data = job_male, aes(x= reorder(job, n), y = n)) +
geom_col()
#여성 직업 상위10개
job_female <- welfare %>%
filter(!is.na(job) & sex == "female") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_female
#시각화
ggplot(data = job_female, aes(x= reorder(job, n), y = n)) +
geom_col() +
coord_flip()
#-종교와 월급이 관계가 있을까?
table(welfare$religion)
# 1    2
# 8047 8617
welfare$religion<-ifelse(welfare$religion==1, '있음','없음')
# 없음 있음
# 8617 8047
table(welfare$religion)
qplot(welfare$religion)
summary(welfare$income)
religion_income<-welfare %>%
filter(!is.na(income)) %>%
group_by(religion) %>%
summarise(income_mean=mean(income))
religion_income
#시각화
ggplot(data = religion_income, aes(x= income_mean, y = religion)) +
geom_col()
#-종교유무에 따른 이혼율
table(welfare$religion)
table(welfare$marriage)  #0~6중 1: 유배우, 3:이혼만 필요
welfare$group_marriage <- ifelse(welfare$marriage == 1, "married", ifelse(welfare$marriage == 3, "divorced", NA))
table(welfare$group_marriage)
religion_marriage<-welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(per=round(n/tot_group*100,1))  #종교 유무 집단의 전체 빈도로 나누어서 비율 구함
religion_marriage
divorce<-religion_marriage %>%
filter(group_marriage=='divorced') %>%
select(religion, per)
divorce
ggplot(data = divorce, aes(x= religion, y = per)) + geom_col()
ggplot(data=welfare,aes(y=income,group=marriage,fill=as.factor(marriage)))+
geom_boxplot()
welfare$marriage
marriage_factor<-as.factor(welfare$marriage)
marriage_factor
ggplot(data=welfare,aes(x=1:6,y=income,group=marriage,fill=as.factor(marriage)))+
geom_boxplot()
ggplot(data=welfare,aes(x=c(1:6),y=income,group=marriage,fill=as.factor(marriage)))+
geom_boxplot()
ggplot(data=welfare,aes(y=income,group=marriage,fill=as.factor(marriage)))+
geom_boxplot()
ggplot(data=welfare,aes(y=income,group=marriage,fill=as.factor(marriage)))+
geom_col()
aggregate(data=welfare,income~marriage_fac,mean)
ggplot(data=welfare,aes(y=income,group=marriage,fill=as.factor(marriage)))+
geom_boxplot()
trans_marriage<-data.frame(code=c(0:6),marriage=c('비해당','유배우',
'사별','이혼','별거','미혼','기타'))
welfare<-left_join(welfare,join_marriage,by=c('marriage'))
join_marriage<-data.frame(code=c(0:6),marriage=c('비해당','유배우',
'사별','이혼','별거','미혼','기타'))
welfare<-left_join(welfare,join_marriage,by=c('marriage'))
welfare$marriage
#테이블에 지역명 변수 추가
welfare<-left_join(welfare, names_region, id='region_code')
welfare %>%
select(region_code, region) %>%
tail(10)
names_marriage<-data.frame(region_code = c(0:6),marriage=c('비해당','유배우',
'사별','이혼','별거','미혼','기타'))
names_marriage
names_marriage<-data.frame(marriage_code = c(0:6),marriage=c('비해당','유배우',
'사별','이혼','별거','미혼','기타'))
names_marriage
#테이블에 변수 추가
welfare<-left_join(welfare, names_marriage, id='marriage_code')
names_marriage
welfare$marriage
str(welfare$marriage)
as.factor(welfare$marriage)
names_marriage<-data.frame(marriage_code = c(0:6),marriage=c('비해당','유배우',
'사별','이혼','별거','미혼','기타'))
names_marriage
#테이블에 변수 추가
welfare<-left_join(welfare, names_marriage, id='marriage_code')
class(names_marriage)
names_marriage
#테이블에 변수 추가
welfare<-left_join(welfare, names_marriage, id='marriage_code')
ggplot(data=welfare,aes(y=income,group=marriage,fill=as.factor(marriage)))+
geom_boxplot()
#극단치가 유배우에 많이 존재
welfare$marriage
#극단치가 유배우에 많이 존재
welfare$group_marriage
#극단치가 유배우에 많이 존재
welfare$marriage
ggplot(data=welfare,aes(y=income,group=marriage,fill=as.factor(marriage)))+
geom_boxplot(width=8)
ggplot(data=welfare,aes(y=income,group=marriage,fill=as.factor(marriage)))+
geom_boxplot(outlier.colour = "red")
ggplot(data=welfare,aes(x=marriage, y=income,fill=as.factor(marriage)))+
geom_boxplot(outlier.colour = "red")
ggplot(data=welfare,aes(x=marriage, y=income))+
geom_boxplot(outlier.colour = "red")
aggregate(data=welfare,income~marriage_fac,mean)
ggplot(data=welfare,aes(x=marriage, y=income,fill=as.factor(marriage)))+
geom_boxplot(outlier.colour = "red")
is.na(welfare$marriage)
sum(is.na(welfare$marriage))
welfare %>%
ggplot(aes(y=wage_m,group=marriage.y,fill=as.factor(marriage.y)))+
geom_boxplot(outlier.colour = "red")
welfare %>%
ggplot(aes(y=income,group=marriage.y,fill=as.factor(marriage.y)))+
geom_boxplot(outlier.colour = "red")
welfare %>%
ggplot(aes(y=income,group=marriage,fill=as.factor(marriage)))+
geom_boxplot(outlier.colour = "red")
ggplot(data=welfare,aes(x=marriage, y=income,fill=as.factor(marriage)))+
geom_boxplot(outlier.colour = "red")
aggregate(data=welfare,income~marriage_fac,mean)
aggregate(data=welfare,income~marriage,mean)
marriage_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(marriage) %>%
summarise(mean_income = mean(income))
marriage_income
trans_marriage<-data.frame(code=c(0:6),marriage=c('비해당','유배우',
'사별','이혼','별거','미혼','기타'))
trans_marriage
welfare<-left_join(welfare,trans_marriage,by=c('marriage'='code'))
welfare
welfare$marriage
#극단치가 유배우에 많이 존재
ggplot(data=welfare,aes(x=marriage, y=income,fill=as.factor(marriage)))+
geom_boxplot(outlier.colour = "red")
aggregate(data=welfare,income~marriage,mean)
#이 방법도 1~5까지 범위만 나타남..ㅜ
marriage_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(marriage) %>%
summarise(mean_income = mean(income))
marriage_income
n
name_marriage<-data.frame(code=c(0:6),marriage=c('비해당','유배우',
'사별','이혼','별거','미혼','기타'))
name_marriage
welfare<-left_join(welfare,name_marriage,by=c('marriage'='code'))
aggregate(data=welfare,income~marriage,mean)
b<-ggplot(welfare,aes(as.factor(marriage)))+
geom_bar()
b
b<-ggplot(welfare,aes(as.factor(marriage)))+
geom_bar()
b
ggplot(welfare,aes(as.factor(marriage)))+
geom_bar()
aggregate(data=welfare,income~marriage,mean)
#이 방법도 1~5까지 범위만 나타남..ㅜ
marriage_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(marriage) %>%
summarise(mean_income = mean(income))
marriage_income
#-권역별로 월급 차이 분석
table(welfare$region)
sum(is.na(welfare$region))
sum(is.na(welfare$income))
region_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(region) %>%
summarise(mean_income = mean(income))
#-권역별로 월급 차이 분석
table(welfare$region)
welfare$marriage.y
welfare$code_region
#변수 검토
table(welfare$region_code)
names_region<-data.frame(region_code = c(1:7),
region=c("서울",
"수도권(인천/경기)",
"부산/경남/울산",
"대구/경북",
"대전/충남",
"강원/충북",
"광주/전남/전북/제주"))
names_region
welfare<-left_join(welfare, names_region, id='region_code')
#변수 검토
table(welfare$region_code)
#변수 검토
table(welfare$region_code)
#변수 검토
table(welfare$region_code)
names_region<-data.frame(region_code = c(1:7),
region=c("서울",
"수도권(인천/경기)",
"부산/경남/울산",
"대구/경북",
"대전/충남",
"강원/충북",
"광주/전남/전북/제주"))
names_region
welfare<-left_join(welfare, names_region, id='region_code')
library(foreign) # SPSS 파일 로드
library(dplyr) # 전처리
library(ggplot2) # 시각화
library(readxl) # 엑셀 파일 불러오기
library(readxl)
library(foreign) # SPSS 파일 로드
library(dplyr) # 전처리
library(ggplot2) # 시각화
library(readxl) # 엑셀 파일 불러오기
library(readxl)
#변수 검토
table(welfare$region_code)
names_region<-data.frame(region_code = c(1:7),
region=c("서울",
"수도권(인천/경기)",
"부산/경남/울산",
"대구/경북",
"대전/충남",
"강원/충북",
"광주/전남/전북/제주"))
names_region
welfare<-left_join(welfare, names_region, id='region_code')
#변수 검토
table(welfare$region_code)
list_region <- data.frame(code_region = c(1:7),
region = c("서울",
"수도권(인천/경기)",
"부산/경남/울산",
"대구/경북",
"대전/충남",
"강원/충북",
"광주/전남/전북/제주"
))
list_region
welfare <- left_join(welfare, list_region, id = "code_region")
welfare %>%
select(code_region, region) %>%
head
library(foreign) # SPSS 파일 로드
library(dplyr) # 전처리
library(ggplot2) # 시각화
library(readxl) # 엑셀 파일 불러오기
library(readxl)
#변수 검토
table(welfare$region_code)
list_region <- data.frame(code_region = c(1:7),
region = c("서울",
"수도권(인천/경기)",
"부산/경남/울산",
"대구/경북",
"대전/충남",
"강원/충북",
"광주/전남/전북/제주"
))
list_region
welfare <- left_join(welfare, list_region, id = "code_region")
welfare %>%
select(code_region, region) %>%
head
welfare %>%
select(code_region, region) %>%
tail(10)
welfare %>%
select(code_region, region) %>%
tail(30)
table(welfare$region)
sum(is.na(welfare$region))
sum(is.na(welfare$income))
region_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(region) %>%
summarise(mean_income = mean(income))
region_income
ggplot(data=region_income, aes(x=region, fill=mean_income))+
geom_density()+
labs(x='region')
ggplot(data=region_income, aes(x=region, y=mean_income))+
geom_boxplot()+
labs(title='region_income',
x='region', y='mean_income')
region_age_grade<-welfare %>%
group_by(region, age_grade) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(per=round(n/tot_group *100,1))
region_age_grade
#시각화
ggplot(data = region_age_grade, aes(x = region, y = per, fill = age_grade)) +
geom_col()
#노년층 비율 순으로 정렬
old_order<-region_age_grade %>%
filter(age_grade=='old') %>%
arrange(per)
region_age_grade
#시각화
ggplot(data = region_age_grade, aes(x = region, y = per, fill = age_grade)) +
geom_col()
region_age_grade
welfare$group_marriage
#-연령대 및 종교 유무에 따른 이혼율
#연령대, 종교 유무, 결혼 상태별로 집단 나눠 빈도 구하기
welfare$age
#-연령대 및 종교 유무에 따른 이혼율
#연령대, 종교 유무, 결혼 상태별로 집단 나눠 빈도 구하기
str(welfare$age)
#-연령대 및 종교 유무에 따른 이혼율
#연령대, 종교 유무, 결혼 상태별로 집단 나눠 빈도 구하기
class(welfare$age)
#-연령대 및 종교 유무에 따른 이혼율
#연령대, 종교 유무, 결혼 상태별로 집단 나눠 빈도 구하기
as.factor(welfare$age)
age_religion_marriage<- welfare %>%
filter(!is.na(group_marriage) & age_grade!=1:18) %>%
group_by(age_grade, religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(per=round(n/tot_group*100,1))
age_religion_marriage<- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(age_grade, religion, group_marriage) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(per=round(n/tot_group*100,1))
age_religion_marriage
divorce<-age_religion_marriage %>%
filter(group_marriage=='divorced') %>%
select(age_grade, religion, per)
divorce
#시각화
ggplot(data = divorce, aes(x = age_grade, y = per, fill = religion)) +
geom_col(position= 'dodge')
#시각화
ggplot(data = divorce, aes(x = age_grade, y = per, fill = religion))
#시각화
ggplot(data = divorce, aes(x = age_grade, y = per, fill = religion)) +
geom_col()
divorce
library(foreign) # SPSS 파일 로드
library(dplyr) # 전처리
library(ggplot2) # 시각화
library(readxl) # 엑셀 파일 불러오기
raw_welfare<-read.spss(file = "Koweps_hpc10_2015_beta1.sav",to.data.frame = T)
head(raw_welfare)
welfare<-raw_welfare  #복사본
library(readxl)
read_excel('Koweps_Codebook.xlsx',sheet=2)
##데이터 검토
str(welfare)
head(welfare)
welfare <- rename(welfare,
sex = h10_g3,
birth = h10_g4,
marriage = h10_g10,
religion = h10_g11,
income = p1002_8aq1,
code_job = h10_eco9,
code_region = h10_reg7
)
str(welfare)
##NA 있는 변수 알아보기
install.packages("Amelia")
library(Amelia)
missmap(welfare,col = c('red','blue'))
#상관관계 알아보기
welfare_con<-subset(welfare,select=c('sex','birth','marriage','religion','income','code_job','code_region'))
str(welfare_con)
str(welfare)
cor(welfare$income, welfare_con, use="complete.obs")
#상관관계 알아보기
welfare_con<-subset(welfare,select=c('sex','birth','marriage','religion','income','code_job','code_region'))
str(welfare_con)
str(welfare)
cor(welfare$income, welfare_con, use="complete.obs")
#성별 전처리
welfare$sex<-ifelse(welfare$sex==1, 'male','female')
#성별 전처리
welfare$sex<-ifelse(welfare$sex==1, 'male','female')
table(welfare$sex)
